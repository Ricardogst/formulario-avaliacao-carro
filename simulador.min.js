document.addEventListener("DOMContentLoaded",(function(){console.log("JavaScript carregado corretamente");loadBrands()}));function loadBrands(){console.log("Tentando carregar marcas...");fetch("https://public.opendatasoft.com/api/records/1.0/search/?dataset=all-vehicles-model&facet=make").then((response=>{console.log("Resposta da API para marcas recebida:",response);if(!response.ok){throw new Error("Network response was not ok "+response.statusText)}return response.json()})).then((data=>{console.log("Dados de marcas:",data);const marcaSelect=document.getElementById("marca");marcaSelect.innerHTML='<option value="">Selecionar marca</option>';if(data.facet_groups&&data.facet_groups[0].facets.length>0){const sortedBrands=data.facet_groups[0].facets.sort(((a,b)=>a.name.localeCompare(b.name)));sortedBrands.forEach((brand=>{const option=document.createElement("option");option.value=brand.name;option.textContent=brand.name;marcaSelect.appendChild(option)}))}else{console.error("Nenhuma marca encontrada.")}})).catch((error=>console.error("Erro ao buscar marcas:",error)))}function loadModels(){const marcaId=document.getElementById("marca").value;console.log(`Buscando modelos para a marca: ${marcaId}`);fetch(`https://public.opendatasoft.com/api/records/1.0/search/?dataset=all-vehicles-model&facet=model&refine.make=${marcaId}`).then((response=>{console.log("Resposta da API para modelos recebida:",response);if(!response.ok){throw new Error("Network response was not ok "+response.statusText)}return response.json()})).then((data=>{console.log("Dados de modelos:",data);const modeloSelect=document.getElementById("modelo");modeloSelect.innerHTML='<option value="">Selecionar modelo</option>';if(data.facet_groups&&data.facet_groups[0].facets.length>0){const sortedModels=data.facet_groups[0].facets.sort(((a,b)=>a.name.localeCompare(b.name)));sortedModels.forEach((model=>{const option=document.createElement("option");option.value=model.name;option.textContent=model.name;modeloSelect.appendChild(option)}));document.getElementById("modelField").style.display="block"}else{console.error("Nenhum modelo encontrado.")}})).catch((error=>console.error("Erro ao buscar modelos:",error)))}function loadYears(){const modeloId=document.getElementById("modelo").value;const marcaId=document.getElementById("marca").value;console.log(`Buscando anos para o modelo: ${modeloId} da marca: ${marcaId}`);fetch(`https://public.opendatasoft.com/api/records/1.0/search/?dataset=all-vehicles-model&facet=year&refine.make=${marcaId}&refine.model=${modeloId}`).then((response=>{console.log("Resposta da API para anos recebida:",response);if(!response.ok){throw new Error("Network response was not ok "+response.statusText)}return response.json()})).then((data=>{console.log("Dados de anos:",data);const yearSelect=document.getElementById("year");yearSelect.innerHTML='<option value="">Selecionar ano</option>';if(data.facet_groups&&data.facet_groups[0].facets.length>0){const sortedYears=data.facet_groups[0].facets.sort(((a,b)=>b.name.localeCompare(a.name)));sortedYears.forEach((year=>{const option=document.createElement("option");option.value=year.name;option.textContent=year.name;yearSelect.appendChild(option)}));document.getElementById("yearField").style.display="block"}else{console.error("Nenhum ano encontrado.")}})).catch((error=>console.error("Erro ao buscar anos:",error)))}function loadBodyTypes(){const modeloId=document.getElementById("modelo").value;console.log(`Buscando tipos de carroceria (vclass) para o modelo: ${modeloId}`);fetch(`https://public.opendatasoft.com/api/records/1.0/search/?dataset=all-vehicles-model&facet=vclass&refine.model=${modeloId}`).then((response=>{console.log("Resposta da API para tipos de carroceria recebida:",response);if(!response.ok){throw new Error("Network response was not ok "+response.statusText)}return response.json()})).then((data=>{console.log("Dados de tipos de carroceria (vclass):",data);const bodyTypeSelect=document.getElementById("bodyType");bodyTypeSelect.innerHTML='<option value="">Selecionar tipo de carroceria</option>';if(data.facet_groups&&data.facet_groups[0].facets.length>0){const sortedBodyTypes=data.facet_groups[0].facets.sort(((a,b)=>a.name.localeCompare(b.name)));sortedBodyTypes.forEach((type=>{const option=document.createElement("option");option.value=type.name;option.textContent=type.name;bodyTypeSelect.appendChild(option)}));document.getElementById("bodyTypeField").style.display="block"}else{console.error("Nenhum tipo de carroceria encontrado.")}})).catch((error=>console.error("Erro ao buscar tipos de carroceria:",error)))}function loadFuelTypes(){const modeloId=document.getElementById("modelo").value;const fuelSelect=document.getElementById("fuel");console.log(`Buscando tipos de combustível para o modelo: ${modeloId}`);if(!fuelSelect){console.error("Erro: Elemento fuelSelect não encontrado.");return}fuelSelect.innerHTML='<option value="">Selecionar tipo de combustível</option>';fetch(`https://public.opendatasoft.com/api/records/1.0/search/?dataset=all-vehicles-model&facet=fueltype&facet=fueltype1&refine.model=${modeloId}`).then((response=>{console.log("Resposta da API para tipos de combustível recebida:",response);if(!response.ok){throw new Error("Network response was not ok "+response.statusText)}return response.json()})).then((data=>{console.log("Dados de tipos de combustível:",data);if(data.records&&data.records.length>0){const fuelTypes=new Set;data.records.forEach((record=>{let fuelType=cleanFuelTypeString(record.fields.fueltype,record.fields.fueltype1);if(fuelType){fuelTypes.add(fuelType)}}));fuelTypes.forEach((fuelType=>{const option=document.createElement("option");option.value=fuelType;option.textContent=fuelType;fuelSelect.appendChild(option)}));document.getElementById("fuelField").style.display="block"}else{console.error("Nenhum tipo de combustível encontrado.")}})).catch((error=>console.error("Erro ao buscar tipos de combustível:",error)))}function cleanFuelTypeString(fueltype,fueltype1){if(fueltype1&&fueltype1.toLowerCase().includes("gasoline")){return"Gasolina"}if(fueltype1&&fueltype1.toLowerCase().includes("diesel")){return"Diesel"}if(fueltype&&fueltype.toLowerCase().includes("electricity")){return"Elétrico"}return null}function showMileageField(){const fuel=document.getElementById("fuel").value;if(fuel){resetFieldsBelow("mileageField");document.getElementById("mileageField").style.display="block"}}function showSaleTimeField(){const mileage=document.getElementById("mileage").value;const mileageField=document.getElementById("mileage");const saleTimeField=document.getElementById("saleTimeField");if(mileage&&/^\d+$/.test(mileage)){resetFieldsBelow("saleTimeField");saleTimeField.style.display="block";mileageField.setCustomValidity("")}else{mileageField.setCustomValidity("Por favor, insira um número válido.");mileageField.reportValidity();saleTimeField.style.display="none"}}function showBuyerField(){const saleTime=document.getElementById("saleTime").value;if(saleTime){resetFieldsBelow("buyerField");document.getElementById("buyerField").style.display="block"}}function showEmailField(){const buyer=document.getElementById("buyer").value;if(buyer){resetFieldsBelow("emailField");document.getElementById("emailField").style.display="block"}}function resetFieldsBelow(fieldId){const fields=["mileageField","saleTimeField","buyerField","emailField"];let reset=false;fields.forEach((field=>{if(reset){document.getElementById(field).style.display="none";const input=document.querySelector(`#${field} input, #${field} select`);if(input){input.value=""}}if(field===fieldId){reset=true}}))}function submitForm(){const emailField=document.getElementById("email");if(!validateEmail(emailField.value)){emailField.setCustomValidity("Por favor, insira um email válido.");emailField.reportValidity();return}else{emailField.setCustomValidity("")}alert("Formulário enviado com sucesso!");resetFieldsBelow("brandField")}function validateEmail(email){const re=/^[^\s@]+@[^\s@]+\.[^\s@]+$/;return re.test(String(email).toLowerCase())}